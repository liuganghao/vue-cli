#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander')
// var com = require('../lib/meta.js').com
var ejs = require('ejs')
const expect = require('chai').expect,
  fs = require('fs'),
  fail = expect.fail,
  core = require('jhipster-core'),
  parse = core.parse,
  parseFromFiles = core.parseFromFiles
class com {
  constructor() {
    this._mainentity = new mainentity();

  }
  tojson() {
    return JSON.stringify(this);
  }
  get Name() {
    return this._name;
  }
  set Name(name) {
    this._name = name;
  }
  get mainEntity() {
    return this._mainentity;
  }

}
class mainentity {
  get Name() {
    return this._name;
  }
  set Name(name) {
    this._name = name;
  }

}

const input = fs.readFileSync('./test.jdl', 'utf-8').toString();
const content = parse(input);
//console.log(JSON.stringify(content));
let metacom = new com();
// metacom.mainEntity = {};
content.entities.forEach(function (entity) {
  //console.log("start generate  "+entity.name);
if(entity.name == "Task")
  metacom.mainEntity.Name = entity.name;
}, this);

var str = "class <%= metacom.mainEntity.Name %>{";
// +
//   "<%for (var index = 0; index < entity.body.length; index++) {" +
//   "var property = entity.body[index];%>" +
//   " <%= property.name%>:<%=property.type%> //property" +
//   "<%}" +
//   "%>}";
var entityjsfile = ejs.render(str, { metacom: metacom });
console.log(entityjsfile);


